#!/bin/bash

set -euo pipefail

JOB_TYPE=$1  # Type of bench: io | cpu
JOBS_COUNT=$2
QUEUES_COUNT=8

echo
echo "*************************************"
echo "* BENCHMARKS FOR JOB TYPE: $JOB_TYPE "
echo "* ACTUAL LOAD: $JOBS_COUNT jobs      "
echo "*************************************"

# Use the script's directory to source the other scripts
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

. "$SCRIPT_DIR/batch_spinner.sh"
. "$SCRIPT_DIR/batch_clean.sh"
. "$SCRIPT_DIR/batch_enqueue.sh"
. "$SCRIPT_DIR/batch_duration.sh"
. "$SCRIPT_DIR/batch_resource_report.sh"
. "$SCRIPT_DIR/batch_workers_finder.sh"

#####################################################################

echo
echo "==========================================="
echo "Batch with 1 process + 8 queues + 5 threads"
echo "==========================================="

JOB_CONCURRENCY=1 ./bin/jobs > /dev/null 2>&1 &
JOB_PID=$!

read -a WORKER_JOB_PIDS <<< "$(find_worker_pids_by_parent "$JOB_PID")"
# echo "WORKERS PIDS: ${WORKER_JOB_PIDS[@]}"

declare -a CPU_SAMPLER_PIDS
monitor_cpu_usage_dynamic CPU_SAMPLER_PIDS "${WORKER_JOB_PIDS[@]}"
# echo "SAMPLER PIDS: ${CPU_SAMPLER_PIDS[@]}"

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" "$QUEUES_COUNT" "$JOBS_COUNT"
show_spinner_until_jobs_complete "$JOBS_COUNT"

kill "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true
wait "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true

show_batch_duration
show_avg_peak_memory_mb "${WORKER_JOB_PIDS[@]}"
show_avg_monitor_cpu_usage "${WORKER_JOB_PIDS[@]}"

kill "$JOB_PID" 2>/dev/null || true
wait "$JOB_PID" 2>/dev/null || true

#####################################################################

echo
echo "==========================================="
echo "Batch with 2 process + 8 queues + 5 threads"
echo "==========================================="

JOB_CONCURRENCY=2 ./bin/jobs > /dev/null 2>&1 &
JOB_PID=$!

read -a WORKER_JOB_PIDS <<< "$(find_worker_pids_by_parent "$JOB_PID")"
# echo "WORKERS PIDS: ${WORKER_JOB_PIDS[@]}"

declare -a CPU_SAMPLER_PIDS
monitor_cpu_usage_dynamic CPU_SAMPLER_PIDS "${WORKER_JOB_PIDS[@]}"
# echo "SAMPLER PIDS: ${CPU_SAMPLER_PIDS[@]}"

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" "$QUEUES_COUNT" "$JOBS_COUNT"
show_spinner_until_jobs_complete "$JOBS_COUNT"

kill "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true
wait "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true

show_batch_duration
show_avg_peak_memory_mb "${WORKER_JOB_PIDS[@]}"
show_avg_monitor_cpu_usage "${WORKER_JOB_PIDS[@]}"

kill "$JOB_PID" 2>/dev/null || true
wait "$JOB_PID" 2>/dev/null || true

#####################################################################

echo
echo "==========================================="
echo "Batch with 4 process + 8 queues + 5 threads"
echo "==========================================="

JOB_CONCURRENCY=4 ./bin/jobs > /dev/null 2>&1 &
JOB_PID=$!

read -a WORKER_JOB_PIDS <<< "$(find_worker_pids_by_parent "$JOB_PID")"
# echo "WORKERS PIDS: ${WORKER_JOB_PIDS[@]}"

declare -a CPU_SAMPLER_PIDS
monitor_cpu_usage_dynamic CPU_SAMPLER_PIDS "${WORKER_JOB_PIDS[@]}"
# echo "SAMPLER PIDS: ${CPU_SAMPLER_PIDS[@]}"

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" "$QUEUES_COUNT" "$JOBS_COUNT"
show_spinner_until_jobs_complete "$JOBS_COUNT"

kill "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true
wait "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true

show_batch_duration
show_avg_peak_memory_mb "${WORKER_JOB_PIDS[@]}"
show_avg_monitor_cpu_usage "${WORKER_JOB_PIDS[@]}"

kill "$JOB_PID" 2>/dev/null || true
wait "$JOB_PID" 2>/dev/null || true

#####################################################################

echo
echo "==========================================="
echo "Batch with 8 process + 8 queues + 5 threads"
echo "==========================================="

JOB_CONCURRENCY=8 ./bin/jobs > /dev/null 2>&1 &
JOB_PID=$!

read -a WORKER_JOB_PIDS <<< "$(find_worker_pids_by_parent "$JOB_PID")"
# echo "WORKERS PIDS: ${WORKER_JOB_PIDS[@]}"

declare -a CPU_SAMPLER_PIDS
monitor_cpu_usage_dynamic CPU_SAMPLER_PIDS "${WORKER_JOB_PIDS[@]}"
# echo "SAMPLER PIDS: ${CPU_SAMPLER_PIDS[@]}"

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" "$QUEUES_COUNT" "$JOBS_COUNT"
show_spinner_until_jobs_complete "$JOBS_COUNT"

kill "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true
wait "${CPU_SAMPLER_PIDS[@]}" 2>/dev/null || true

show_batch_duration
show_avg_peak_memory_mb "${WORKER_JOB_PIDS[@]}"
show_avg_monitor_cpu_usage "${WORKER_JOB_PIDS[@]}"

kill "$JOB_PID" 2>/dev/null || true
wait "$JOB_PID" 2>/dev/null || true

