#!/bin/bash

set -euo pipefail

JOB_TYPE=$1  # Type of bench: io | cpu
JOBS_COUNT=$2

echo
echo "**********************************"
echo "* BENCHMARKS FOR JOB TYPE: $JOB_TYPE"
echo "* ACTUAL LOAD: $JOBS_COUNT jobs"
echo "**********************************"

# Use the script's directory to source the other scripts
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

. "$SCRIPT_DIR/batch_spinner.sh"
. "$SCRIPT_DIR/batch_clean.sh"
. "$SCRIPT_DIR/batch_enqueue.sh"
. "$SCRIPT_DIR/batch_duration.sh"
. "$SCRIPT_DIR/batch_resource_report.sh"
. "$SCRIPT_DIR/batch_resource_avg.sh"

THREADS=5

# ==========================================
# Batch with 1 process + 8 queues + 5 threads
# ==========================================
echo
echo "==========================================="
echo "Batch with 1 process + 8 queues + 5 threads"
echo "==========================================="

GOOD_JOB_EXECUTION_MODE=external \
  GOOD_JOB_MAX_THREADS=5 \
  bundle exec good_job start --queues="*" > /dev/null 2>&1 &
GOOD_JOB_PID=$!

monitor_cpu_usage_dynamic "$GOOD_JOB_PID" &
CPU_SAMPLER_PID=$!

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" 8 "$JOBS_COUNT"
show_spinner_until_jobs_complete

kill "$CPU_SAMPLER_PID" 2>/dev/null || true
wait "$CPU_SAMPLER_PID" 2>/dev/null || true

show_batch_duration
peak_mb=$(get_peak_memory_mb "$GOOD_JOB_PID")
echo "[PID $GOOD_JOB_PID] GoodJob peak memory usage: ${peak_mb:-N/A} MB"
show_monitor_cpu_usage "$GOOD_JOB_PID"

kill "$GOOD_JOB_PID" 2>/dev/null || true
wait "$GOOD_JOB_PID" 2>/dev/null || true

# ==============================================
# Batch with 2 processes + 4 queues + 5 threads
# ==============================================
echo
echo "============================================="
echo "Batch with 2 processes + 4 queues + 5 threads"
echo "============================================="

QUEUES_ONE="queue_0:$THREADS;queue_1:$THREADS;queue_2:$THREADS;queue_3:$THREADS"
QUEUES_TWO="queue_4:$THREADS;queue_5:$THREADS;queue_6:$THREADS;queue_7:$THREADS"

GOOD_JOB_EXECUTION_MODE=external \
  GOOD_JOB_MAX_THREADS=5 \
  bundle exec good_job start --queues="*" > /dev/null 2>&1 &
GOOD_JOB_PID_ONE=$!
GOOD_JOB_EXECUTION_MODE=external \
  GOOD_JOB_MAX_THREADS=5 \
  bundle exec good_job start --queues="*" > /dev/null 2>&1 &
GOOD_JOB_PID_TWO=$!

monitor_cpu_usage_dynamic "$GOOD_JOB_PID_ONE" &
CPU_SAMPLER_PID_ONE=$!
monitor_cpu_usage_dynamic "$GOOD_JOB_PID_TWO" &
CPU_SAMPLER_PID_TWO=$!

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" 8 "$JOBS_COUNT"
show_spinner_until_jobs_complete

kill "$CPU_SAMPLER_PID_ONE" "$CPU_SAMPLER_PID_TWO" 2>/dev/null || true
wait "$CPU_SAMPLER_PID_ONE" "$CPU_SAMPLER_PID_TWO" 2>/dev/null || true

show_batch_duration

# peak_mb=$(get_peak_memory_mb "$GOOD_JOB_PID_ONE")
# echo "[PID $GOOD_JOB_PID_ONE] GoodJob peak memory usage: ${peak_mb:-N/A} MB"
# peak_mb=$(get_peak_memory_mb "$GOOD_JOB_PID_TWO")
# echo "[PID $GOOD_JOB_PID_TWO] GoodJob peak memory usage: ${peak_mb:-N/A} MB"

# show_monitor_cpu_usage "$GOOD_JOB_PID_ONE"
# show_monitor_cpu_usage "$GOOD_JOB_PID_TWO"
report_resource_averages "$GOOD_JOB_PID_ONE" "$GOOD_JOB_PID_TWO"

kill "$GOOD_JOB_PID_ONE" "$GOOD_JOB_PID_TWO" 2>/dev/null || true
wait "$GOOD_JOB_PID_ONE" "$GOOD_JOB_PID_TWO" 2>/dev/null || true

# ==============================================
# Batch with 4 processes + 2 queues + 5 threads
# ==============================================
echo
echo "============================================="
echo "Batch with 4 processes + 2 queues + 5 threads"
echo "============================================="

GOOD_JOB_EXECUTION_MODE=external \
  GOOD_JOB_MAX_THREADS=5 \
  bundle exec good_job start --queues="*" > /dev/null 2>&1 &
GOOD_JOB_PID_ONE=$!
GOOD_JOB_EXECUTION_MODE=external \
  GOOD_JOB_MAX_THREADS=5 \
  bundle exec good_job start --queues="*" > /dev/null 2>&1 &
GOOD_JOB_PID_TWO=$!
GOOD_JOB_EXECUTION_MODE=external \
  GOOD_JOB_MAX_THREADS=5 \
  bundle exec good_job start --queues="*" > /dev/null 2>&1 &
GOOD_JOB_PID_THREE=$!
GOOD_JOB_EXECUTION_MODE=external \
  GOOD_JOB_MAX_THREADS=5 \
  bundle exec good_job start --queues="*" > /dev/null 2>&1 &
GOOD_JOB_PID_FOUR=$!

monitor_cpu_usage_dynamic "$GOOD_JOB_PID_ONE" &
CPU_SAMPLER_PID_ONE=$!
monitor_cpu_usage_dynamic "$GOOD_JOB_PID_TWO" &
CPU_SAMPLER_PID_TWO=$!
monitor_cpu_usage_dynamic "$GOOD_JOB_PID_THREE" &
CPU_SAMPLER_PID_THREE=$!
monitor_cpu_usage_dynamic "$GOOD_JOB_PID_FOUR" &
CPU_SAMPLER_PID_FOUR=$!

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" 8 "$JOBS_COUNT"
show_spinner_until_jobs_complete

kill "$CPU_SAMPLER_PID_ONE" "$CPU_SAMPLER_PID_TWO" "$CPU_SAMPLER_PID_THREE" "$CPU_SAMPLER_PID_FOUR" 2>/dev/null || true
wait "$CPU_SAMPLER_PID_ONE" "$CPU_SAMPLER_PID_TWO" "$CPU_SAMPLER_PID_THREE" "$CPU_SAMPLER_PID_FOUR" 2>/dev/null || true

show_batch_duration

#for pid in "$GOOD_JOB_PID_ONE" "$GOOD_JOB_PID_TWO" "$GOOD_JOB_PID_THREE" "$GOOD_JOB_PID_FOUR"; do
#  peak_mb=$(get_peak_memory_mb "$pid")
#  echo "[PID $pid] GoodJob peak memory usage: ${peak_mb:-N/A} MB"
#  show_monitor_cpu_usage "$pid"
#done
report_resource_averages "$GOOD_JOB_PID_ONE" "$GOOD_JOB_PID_TWO" "$GOOD_JOB_PID_THREE" "$GOOD_JOB_PID_FOUR"

kill "$GOOD_JOB_PID_ONE" "$GOOD_JOB_PID_TWO" "$GOOD_JOB_PID_THREE" "$GOOD_JOB_PID_FOUR" 2>/dev/null || true
wait "$GOOD_JOB_PID_ONE" "$GOOD_JOB_PID_TWO" "$GOOD_JOB_PID_THREE" "$GOOD_JOB_PID_FOUR" 2>/dev/null || true

# =================================================
# Batch with 8 processes + 1 queue each + 5 threads
# =================================================
echo
echo "================================================="
echo "Batch with 8 processes + 1 queue each + 5 threads"
echo "================================================="

for i in {0..7}; do
  queues[$i]="queue_${i}:$THREADS"
done

for i in {0..7}; do
  GOOD_JOB_EXECUTION_MODE=external \
    GOOD_JOB_MAX_THREADS=5 \
    bundle exec good_job start --queues="*" > /dev/null 2>&1 &
  GOOD_JOB_PIDS[$i]=$!
done

for i in {0..7}; do
  monitor_cpu_usage_dynamic "${GOOD_JOB_PIDS[$i]}" &
  CPU_SAMPLER_PIDS[$i]=$!
done

show_spinner_clean_batch
show_spinner_enqueue_jobs "$JOB_TYPE" 8 "$JOBS_COUNT"
show_spinner_until_jobs_complete

for pid in "${CPU_SAMPLER_PIDS[@]}"; do
  kill "$pid" 2>/dev/null || true
  wait "$pid" 2>/dev/null || true
done

show_batch_duration

#for pid in "${GOOD_JOB_PIDS[@]}"; do
#  peak_mb=$(get_peak_memory_mb "$pid")
#  echo "[PID $pid] GoodJob peak memory usage: ${peak_mb:-N/A} MB"
#  show_monitor_cpu_usage "$pid"
#done
report_resource_averages "${GOOD_JOB_PIDS[@]}"

for pid in "${GOOD_JOB_PIDS[@]}"; do
  kill "$pid" 2>/dev/null || true
  wait "$pid" 2>/dev/null || true
done

